<project default="jar">
    <property name="checker.classpath" value="localbin/jsr308-all.jar"/>
    <property name="junit.classpath" value="lib/junit-4.7.jar"/>
    <property name="scj.classpath" value="lib/scj.jar"/>
    <property name="scj.checker.classpath" value="lib/scj-checker.jar"/>

    <property name="build.reports" value="reports"/>
    <property name="run.tests.should.fork" value="true"/>
    <property name="halt.on.test.failure" value="false"/>

    <target name="clean">
        <delete dir="build"/>
        <delete dir="testsuite/build"/>
        <delete file="lib/scj-checker.jar"/>
    </target>

    <target name="compile">
        <mkdir dir="build/classes"/>
        <javac srcdir="src:spec" destdir="build/classes"
               includeAntRuntime="yes" debug="true"
               debuglevel="lines,vars,source">
            <classpath>
                <pathelement path="${junit.classpath}"/>
                <pathelement path="${scj.classpath}"/>
            </classpath>
            <compilerarg value="-Xbootclasspath/p:${checker.classpath}"/>
        </javac>
    </target>

    <target name="jar" depends="compile">
        <jar destfile="lib/scj-checker.jar" basedir="build/classes"/>
    </target>

    <target name="check-hello" depends="jar">
        <javac srcdir="src" destdir="build/classes" includeAntRuntime="yes"
               debug="true" debuglevel="lines,vars,source">
            <classpath>
                <pathelement path="lib/scj.jar"/>
                <pathelement path="lib/scj-checker.jar"/>
                <pathelement path="lib/junit-4.7.jar"/>
            </classpath>
            <compilerarg value="-Xbootclasspath/p:{checker.classpath}"/>
        </javac>
    </target>

    <!-- Test Framework -->

    <target name="compile-tests" depends="jar">
        <mkdir dir="testsuite/build"/>
        <javac srcdir="testsuite/src" destdir="testsuite/build" debug="true"
	           includeAntRuntime="yes" debuglevel="lines,vars,source">
            <classpath>
                <pathelement path="${junit.classpath}"/>
                <pathelement path="${scj.classpath}"/>
                <pathelement path="${scj.checker.classpath}"/>
            </classpath>
            <compilerarg value="-Xbootclasspath/p:${checker.classpath}"/>
            <include name="tests/*.java"/>
        </javac>
    </target>

    <target name="all-tests" depends="jar,compile-tests"
	        description="Run tests for all checkers">
        <!-- Copied from -run-tests target -->
        <mkdir dir="${build.reports}"/>

        <junit fork="${run.tests.should.fork}"
	           dir="${basedir}"
	           printsummary="true"
	           haltonfailure="${halt.on.test.failure}">
            <jvmarg line="-Xbootclasspath/p:${checker.classpath}"/>
            <jvmarg line="-ea"/>

            <classpath>
                <pathelement path="${scj.classpath}"/>
                <pathelement path="${scj.checker.classpath}"/>
                <pathelement path="${junit.classpath}"/>
                <pathelement path="testsuite/build"/>
            </classpath>

            <formatter type="xml"/>
            <formatter type="brief" usefile="false"/>

            <batchtest todir="${build.reports}">
                <fileset dir="testsuite/src/">
                    <include name="tests/*Test.java"/>
                    <!-- Framework classes -->
                    <exclude name="tests/CheckerTest.java"/>
                    <exclude name="tests/ParameterizedCheckerTest.java"/>
                </fileset>
            </batchtest>
        </junit>
        <junitreport todir="${build.reports}">
            <fileset dir="${build.reports}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report todir="${build.reports}/html"/>
        </junitreport>
    </target>

    <target name="simple-tests" depends="jar,compile-tests"
		    description="Run tests for all checkers">
        <!-- Copied from -run-tests target -->
        <mkdir dir="${build.reports}"/>

        <junit fork="${run.tests.should.fork}"
		       dir="${basedir}"
		       printsummary="true"
		       haltonfailure="${halt.on.test.failure}">
            <jvmarg line="-Xbootclasspath/p:${checker.classpath}"/>
            <jvmarg line="-ea"/>

            <classpath>
                <pathelement path="${scj.classpath}"/>
                <pathelement path="${scj.checker.classpath}"/>
                <pathelement path="${junit.classpath}"/>
                <pathelement path="testsuite/build"/>
            </classpath>

            <formatter type="xml"/>
            <formatter type="brief" usefile="false"/>

            <batchtest todir="${build.reports}">
                <fileset dir="testsuite/src/">
                    <include name="tests/SimpleTest.java"/>
                    <!-- Framework classes -->
                    <exclude name="tests/CheckerTest.java"/>
                    <exclude name="tests/ParameterizedCheckerTest.java"/>
                </fileset>
            </batchtest>
        </junit>
        <junitreport todir="${build.reports}">
            <fileset dir="${build.reports}">
                <include name="TEST-*.xml" />
            </fileset>
            <report todir="${build.reports}/html" />
        </junitreport>
    </target>

    <target name="big-tests"
            depends="jar,compile-tests"
            description="Run tests for all checkers">
        <!-- Copied from -run-tests target -->
        <mkdir dir="${build.reports}" />

        <junit fork="${run.tests.should.fork}"
               dir="${basedir}"
               printsummary="true"
               haltonfailure="${halt.on.test.failure}">
            <jvmarg line="-Xbootclasspath/p:${checker.classpath}" />
            <jvmarg line="-ea" />

            <classpath>
                <pathelement path="${scj.classpath}" />
                <pathelement path="${scj.checker.classpath}" />
                <pathelement path="${junit.classpath}" />
                <pathelement path="testsuite/build" />
            </classpath>

            <formatter type="xml" />
            <formatter type="brief" usefile="false" />

            <batchtest todir="${build.reports}">
                <fileset dir="testsuite/src/">
                    <include name="tests/BigTest.java" />
                    <!-- Framework classes -->
                    <exclude name="tests/CheckerTest.java" />
                    <exclude name="tests/ParameterizedCheckerTest.java" />
                </fileset>
            </batchtest>
        </junit>
        <junitreport todir="${build.reports}">
            <fileset dir="${build.reports}">
                <include name="TEST-*.xml" />
            </fileset>
            <report todir="${build.reports}/html" />
        </junitreport>
    </target>

    <target name="scjAllowed-tests"
            depends="jar,compile-tests"
            description="Run tests for all checkers">
        <!-- Copied from -run-tests target -->
        <mkdir dir="${build.reports}" />

        <junit fork="${run.tests.should.fork}"
               dir="${basedir}"
               printsummary="true"
               haltonfailure="${halt.on.test.failure}">
            <jvmarg line="-Xbootclasspath/p:${checker.classpath}" />
            <jvmarg line="-ea" />

            <classpath>
                <pathelement path="${scj.classpath}" />
                <pathelement path="${scj.checker.classpath}" />
                <pathelement path="${junit.classpath}" />
                <pathelement path="testsuite/build" />
            </classpath>

            <formatter type="xml" />
            <formatter type="brief" usefile="false" />

            <batchtest todir="${build.reports}">
                <fileset dir="testsuite/src/">
                    <include name="tests/SCJAllowedTestSimple.java" />
                  <include name="tests/SCJAllowedTestSanity.java" />
                    <!-- Framework classes -->
                    <exclude name="tests/CheckerTest.java"/>
                    <exclude name="tests/ParameterizedCheckerTest.java"/>
                </fileset>
            </batchtest>
        </junit>
        <junitreport todir="${build.reports}">
            <fileset dir="${build.reports}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report todir="${build.reports}/html"/>
        </junitreport>
    </target>
</project>
